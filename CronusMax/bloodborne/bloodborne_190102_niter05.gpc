// bloodborne stone repete

define NITER = 5;

int switch = FALSE;
int curiter = 0;

main {
    if (curiter) {
        combo_run(maxcmb);
    } else  {   
        combo_stop(maxcmb);
        switch = FALSE;
    }
    
    // start macro
    if (event_press(PS4_L3) && !switch) {
        switch = TRUE;
        curiter = NITER;
    } else if (event_press(PS4_L3) && switch) {
        switch = FALSE;
        curiter = 0;
    }
    set_val(TRACE_1, curiter);
}


combo maxcmb_test {
    set_val(PS4_CROSS, 100);
    wait(1000);
    wait(1000);
    curiter = curiter - 1;
}

//
// 2019-01-1 23:39:45
// Combo generated by MAX Combo Plugin.
//----------------------------------------
combo maxcmb {
	set_val(PS4_LY, -23);
	wait(10);
	set_val(PS4_LY, -33);
	wait(10);
	set_val(PS4_LY, -45);
	wait(10);
	set_val(PS4_LY, -56);
	wait(10);
	set_val(PS4_LY, -69);
	wait(10);
	set_val(PS4_LY, -82);
	wait(10);
	set_val(PS4_LY, -96);
	wait(10);
	set_val(PS4_LY, -100);
	wait(150);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(2330);
	set_val(PS4_LX, 23);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(10);
	set_val(PS4_LX, 27);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(10);
	set_val(PS4_LX, 29);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(10);
	set_val(PS4_LX, 32);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(10);
	set_val(PS4_LX, 34);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(10);
	set_val(PS4_LX, 39);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(10);
	set_val(PS4_LX, 41);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(20);
	set_val(PS4_LX, 43);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(970);
	set_val(PS4_LX, 49);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(340);
	set_val(PS4_LX, 38);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(20);
	set_val(PS4_LX, 35);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(20);
	set_val(PS4_LX, 32);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(60);
	set_val(PS4_LX, 28);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 100);
	wait(40);
	set_val(PS4_LX, 25);
	set_val(PS4_LY, -100);
	set_val(PS4_CROSS, 0);
	wait(110);
	set_val(PS4_LX, 0);
	set_val(PS4_LY, -100);
	wait(200);
	set_val(PS4_LY, -95);
	wait(10);
	set_val(PS4_LY, -78);
	wait(10);
	set_val(PS4_LY, -56);
	wait(10);
	set_val(PS4_LY, -34);
	wait(10);
	set_val(PS4_LY, 0);
	wait(50);
	set_val(PS4_RX, -23);
	wait(10);
	set_val(PS4_RX, -32);
	wait(10);
	set_val(PS4_RX, -39);
	wait(10);
	set_val(PS4_RX, -47);
	wait(10);
	set_val(PS4_RX, -55);
	wait(10);
	set_val(PS4_RX, -65);
	wait(10);
	set_val(PS4_RX, -70);
	wait(10);
	set_val(PS4_RX, -79);
	wait(10);
	set_val(PS4_RX, -84);
	set_val(PS4_RY, 20);
	wait(10);
	set_val(PS4_RX, -92);
	set_val(PS4_RY, 23);
	wait(20);
	set_val(PS4_RX, -98);
	set_val(PS4_RY, 24);
	wait(170);
	set_val(PS4_RX, -93);
	set_val(PS4_RY, 23);
	wait(20);
	set_val(PS4_RX, -92);
	set_val(PS4_RY, 20);
	wait(10);
	set_val(PS4_RX, -90);
	set_val(PS4_RY, 20);
	wait(10);
	set_val(PS4_RX, -85);
	set_val(PS4_RY, 0);
	wait(20);
	set_val(PS4_RX, -81);
	wait(10);
	set_val(PS4_RX, -79);
	wait(10);
	set_val(PS4_RX, -73);
	wait(10);
	set_val(PS4_RX, -70);
	wait(10);
	set_val(PS4_RX, -59);
	wait(10);
	set_val(PS4_RX, -51);
	wait(10);
	set_val(PS4_RX, -39);
	wait(10);
	set_val(PS4_RX, -24);
	wait(10);
	set_val(PS4_RX, 0);
	wait(340);
	set_val(PS4_R3, 100);
	wait(120);
	set_val(PS4_R3, 0);
	wait(260);
	set_val(PS4_LY, -26);
	wait(10);
	set_val(PS4_LY, -35);
	wait(10);
	set_val(PS4_LY, -45);
	wait(10);
	set_val(PS4_LY, -52);
	wait(10);
	set_val(PS4_LY, -57);
	wait(10);
	set_val(PS4_LY, -63);
	wait(10);
	set_val(PS4_LY, -70);
	wait(10);
	set_val(PS4_LY, -74);
	wait(10);
	set_val(PS4_LY, -77);
	wait(4000);
	set_val(PS4_LY, -81);
	wait(10);
	set_val(PS4_LY, -79);
	wait(10);
	set_val(PS4_LY, -70);
	wait(10);
	set_val(PS4_LY, -63);
	wait(10);
	set_val(PS4_LY, -52);
	wait(10);
	set_val(PS4_LY, -38);
	wait(10);
	set_val(PS4_LY, -25);
	wait(10);
	set_val(PS4_LY, 0);
	wait(70);
	set_val(PS4_R2, 100);
	wait(2120);
	set_val(PS4_R2, 0);
	wait(590);
	set_val(PS4_R2, 100);
	wait(140);
	set_val(PS4_R2, 0);
	wait(50);
	set_val(PS4_R2, 100);
	wait(120);
	set_val(PS4_R2, 0);
	wait(30);
	set_val(PS4_R2, 100);
	wait(110);
	set_val(PS4_R2, 0);
	wait(2370);
	set_val(PS4_LY, -22);
	wait(10);
	set_val(PS4_LY, -25);
	wait(10);
	set_val(PS4_LY, -30);
	wait(10);
	set_val(PS4_LY, -34);
	wait(10);
	set_val(PS4_LY, -38);
	wait(20);
	set_val(PS4_LY, -41);
	wait(50);
	set_val(PS4_LY, -44);
	wait(20);
	set_val(PS4_LY, -49);
	wait(10);
	set_val(PS4_LY, -52);
	wait(10);
	set_val(PS4_LY, -55);
	wait(20);
	set_val(PS4_LY, -59);
	wait(30);
	set_val(PS4_LY, -63);
	wait(740);
	set_val(PS4_LY, -60);
	wait(20);
	set_val(PS4_LY, -56);
	wait(10);
	set_val(PS4_LY, -50);
	wait(10);
	set_val(PS4_LY, -38);
	wait(10);
	set_val(PS4_LY, -21);
	wait(10);
	set_val(PS4_LY, 0);
	wait(90);
	set_val(PS4_CIRCLE, 100);
	wait(130);
	set_val(PS4_CIRCLE, 0);
	wait(90);
	set_val(PS4_CIRCLE, 100);
	wait(110);
	set_val(PS4_CIRCLE, 0);
	wait(80);
	set_val(PS4_CIRCLE, 100);
	wait(100);
	set_val(PS4_CIRCLE, 0);
	wait(90);
	set_val(PS4_CIRCLE, 100);
	wait(100);
	set_val(PS4_CIRCLE, 0);
	wait(520);
	set_val(PS4_SQUARE, 100);
	wait(140);
	set_val(PS4_SQUARE, 0);
	wait(1050);
	set_val(PS4_CIRCLE, 100);
	wait(140);
	set_val(PS4_CIRCLE, 0);
	wait(4000);
	wait(8000);
	curiter = curiter - 1;
}


